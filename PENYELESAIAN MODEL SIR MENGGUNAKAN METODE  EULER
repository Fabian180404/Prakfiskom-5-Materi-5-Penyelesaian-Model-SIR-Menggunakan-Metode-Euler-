{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyN51Pv0EQ9JfxgVxsflQhtP"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":600},"id":"8HMez_p-GxSA","executionInfo":{"status":"ok","timestamp":1729348482131,"user_tz":-420,"elapsed":2090,"user":{"displayName":"Fabian Rahadian","userId":"14797348072339261340"}},"outputId":"f6b5a194-b3d2-43e0-f744-b93feabc40e0"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<function matplotlib.pyplot.show(close=None, block=None)>"],"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>matplotlib.pyplot.show</b><br/>def show(*args, **kwargs)</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/matplotlib/pyplot.py</a>Display all open figures.\n","\n","Parameters\n","----------\n","block : bool, optional\n","    Whether to wait for all figures to be closed before returning.\n","\n","    If `True` block and run the GUI main loop until all figure windows\n","    are closed.\n","\n","    If `False` ensure that all figure windows are displayed and return\n","    immediately.  In this case, you are responsible for ensuring\n","    that the event loop is running to have responsive figures.\n","\n","    Defaults to True in non-interactive mode and to False in interactive\n","    mode (see `.pyplot.isinteractive`).\n","\n","See Also\n","--------\n","ion : Enable interactive mode, which shows / updates the figure after\n","      every plotting command, so that calling ``show()`` is not necessary.\n","ioff : Disable interactive mode.\n","savefig : Save the figure to an image file instead of showing it on screen.\n","\n","Notes\n","-----\n","**Saving figures to file and showing a window at the same time**\n","\n","If you want an image file as well as a user interface window, use\n","`.pyplot.savefig` before `.pyplot.show`. At the end of (a blocking)\n","``show()`` the figure is closed and thus unregistered from pyplot. Calling\n","`.pyplot.savefig` afterwards would save a new and thus empty figure. This\n","limitation of command order does not apply if the show is non-blocking or\n","if you keep a reference to the figure and use `.Figure.savefig`.\n","\n","**Auto-show in jupyter notebooks**\n","\n","The jupyter backends (activated via ``%matplotlib inline``,\n","``%matplotlib notebook``, or ``%matplotlib widget``), call ``show()`` at\n","the end of every cell by default. Thus, you usually don&#x27;t have to call it\n","explicitly there.</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 401);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"]},"metadata":{},"execution_count":1},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","\n","t0 = 0         #waktu awal\n","tn = 450       #dalam waktu 450 hari\n","ndata = 2500   #jumlah data\n","\n","t = np.linspace(t0,tn,ndata)\n","h = t[2]-t[1]\n","\n","N = 2500         #jumlah populasi\n","I0 = 25          #jumlah awal individu terinfeksi\n","R0 = 3           #jumlah awal individu yang telah sembuh\n","S0 = N-I0-R0     #jumlah awal individu rentan\n","\n","I = np.zeros(ndata)\n","S = np.zeros(ndata)\n","R = np.zeros(ndata)\n","\n","I[0] = I0\n","S[0] = S0\n","R[0] = R0\n","\n","beta = 0.5     #laju penularan\n","gamma = 0.2    #laju pemulihan\n","\n","for n in range(0,ndata-1):\n","    S[n+1] = S[n] - h*beta/N*S[n]*I[n]\n","    I[n+1] = I[n] + h*beta/N*S[n]*I[n] - h*gamma*I[n]\n","    R[n+1] = R[n] + h*gamma*I[n]\n","\n","plt.plot(t,S,'b',label='S')\n","plt.plot(t,I,'r',label='I')\n","plt.plot(t,R,'g',label='R')\n","plt.legend()\n","plt.show"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":600},"executionInfo":{"status":"ok","timestamp":1729418066862,"user_tz":-420,"elapsed":484,"user":{"displayName":"Fabian Rahadian","userId":"14797348072339261340"}},"outputId":"9a1950ad-8831-4f94-bd59-16fe4f27309f","id":"g5UFnrVOWR_C"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["<function matplotlib.pyplot.show(close=None, block=None)>"],"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>matplotlib.pyplot.show</b><br/>def show(*args, **kwargs)</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/matplotlib/pyplot.py</a>Display all open figures.\n","\n","Parameters\n","----------\n","block : bool, optional\n","    Whether to wait for all figures to be closed before returning.\n","\n","    If `True` block and run the GUI main loop until all figure windows\n","    are closed.\n","\n","    If `False` ensure that all figure windows are displayed and return\n","    immediately.  In this case, you are responsible for ensuring\n","    that the event loop is running to have responsive figures.\n","\n","    Defaults to True in non-interactive mode and to False in interactive\n","    mode (see `.pyplot.isinteractive`).\n","\n","See Also\n","--------\n","ion : Enable interactive mode, which shows / updates the figure after\n","      every plotting command, so that calling ``show()`` is not necessary.\n","ioff : Disable interactive mode.\n","savefig : Save the figure to an image file instead of showing it on screen.\n","\n","Notes\n","-----\n","**Saving figures to file and showing a window at the same time**\n","\n","If you want an image file as well as a user interface window, use\n","`.pyplot.savefig` before `.pyplot.show`. At the end of (a blocking)\n","``show()`` the figure is closed and thus unregistered from pyplot. Calling\n","`.pyplot.savefig` afterwards would save a new and thus empty figure. This\n","limitation of command order does not apply if the show is non-blocking or\n","if you keep a reference to the figure and use `.Figure.savefig`.\n","\n","**Auto-show in jupyter notebooks**\n","\n","The jupyter backends (activated via ``%matplotlib inline``,\n","``%matplotlib notebook``, or ``%matplotlib widget``), call ``show()`` at\n","the end of every cell by default. Thus, you usually don&#x27;t have to call it\n","explicitly there.</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 401);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"]},"metadata":{},"execution_count":2},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["import numpy as np\n","import matplotlib.pyplot as plt\n","\n","t0 = 0         #waktu awal\n","tn = 450       #dalam waktu 450 hari\n","ndata = 2500   #jumlah data\n","\n","t = np.linspace(t0,tn,ndata)\n","h = t[2]-t[1]\n","\n","N = 2500         #jumlah populasi\n","I0 = 25          #jumlah awal individu terinfeksi\n","R0 = 3           #jumlah awal individu yang telah sembuh\n","S0 = N-I0-R0     #jumlah awal individu rentan\n","\n","I = np.zeros(ndata)\n","S = np.zeros(ndata)\n","R = np.zeros(ndata)\n","\n","I[0] = I0\n","S[0] = S0\n","R[0] = R0\n","\n","beta = 0.7     #laju penularan\n","gamma = 0.15   #laju pemulihan\n","\n","for n in range(0,ndata-1):\n","    S[n+1] = S[n] - h*beta/N*S[n]*I[n]\n","    I[n+1] = I[n] + h*beta/N*S[n]*I[n] - h*gamma*I[n]\n","    R[n+1] = R[n] + h*gamma*I[n]\n","\n","plt.plot(t,S,'b',label='S')\n","plt.plot(t,I,'r',label='I')\n","plt.plot(t,R,'g',label='R')\n","plt.legend()\n","plt.show"]},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","\n","t0 = 0         #waktu awal\n","tn = 450       #dalam waktu 450 hari\n","ndata = 2500   #jumlah data\n","\n","t = np.linspace(t0,tn,ndata)\n","h = t[2]-t[1]"],"metadata":{"id":"EJIK3xL0WbEL","executionInfo":{"status":"ok","timestamp":1729418347743,"user_tz":-420,"elapsed":372,"user":{"displayName":"Fabian Rahadian","userId":"14797348072339261340"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["N = 2500         #jumlah populasi\n","I0 = 25          #jumlah awal individu terinfeksi\n","R0 = 3           #jumlah awal individu yang telah sembuh\n","S0 = N-I0-R0     #jumlah awal individu rentan\n","\n","I = np.zeros(ndata)\n","S = np.zeros(ndata)\n","R = np.zeros(ndata)\n","\n","I[0] = I0\n","S[0] = S0\n","R[0] = R0"],"metadata":{"id":"2VZNOxA7W50h","executionInfo":{"status":"ok","timestamp":1729418353307,"user_tz":-420,"elapsed":354,"user":{"displayName":"Fabian Rahadian","userId":"14797348072339261340"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["beta = 0.5     #laju penularan\n","gamma = 0.2    #laju pemulihan"],"metadata":{"id":"GxhnlbeLXHsX","executionInfo":{"status":"ok","timestamp":1729418358174,"user_tz":-420,"elapsed":351,"user":{"displayName":"Fabian Rahadian","userId":"14797348072339261340"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["for n in range(0,ndata-1):\n","    S[n+1] = S[n] - h*beta/N*S[n]*I[n]\n","    I[n+1] = I[n] + h*beta/N*S[n]*I[n] - h*gamma*I[n]\n","    R[n+1] = R[n] + h*gamma*I[n]"],"metadata":{"id":"rniQlGPeXO41","executionInfo":{"status":"ok","timestamp":1729418361217,"user_tz":-420,"elapsed":334,"user":{"displayName":"Fabian Rahadian","userId":"14797348072339261340"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["plt.plot(t,S,'b',label='S')\n","plt.plot(t,I,'r',label='I')\n","plt.plot(t,R,'g',label='R')\n","plt.legend()\n","plt.show"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":600},"id":"v1hpyXnMXVPr","executionInfo":{"status":"ok","timestamp":1729418363681,"user_tz":-420,"elapsed":447,"user":{"displayName":"Fabian Rahadian","userId":"14797348072339261340"}},"outputId":"b517ec6a-4558-46ba-ff46-99555c60db6a"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<function matplotlib.pyplot.show(close=None, block=None)>"],"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>matplotlib.pyplot.show</b><br/>def show(*args, **kwargs)</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/matplotlib/pyplot.py</a>Display all open figures.\n","\n","Parameters\n","----------\n","block : bool, optional\n","    Whether to wait for all figures to be closed before returning.\n","\n","    If `True` block and run the GUI main loop until all figure windows\n","    are closed.\n","\n","    If `False` ensure that all figure windows are displayed and return\n","    immediately.  In this case, you are responsible for ensuring\n","    that the event loop is running to have responsive figures.\n","\n","    Defaults to True in non-interactive mode and to False in interactive\n","    mode (see `.pyplot.isinteractive`).\n","\n","See Also\n","--------\n","ion : Enable interactive mode, which shows / updates the figure after\n","      every plotting command, so that calling ``show()`` is not necessary.\n","ioff : Disable interactive mode.\n","savefig : Save the figure to an image file instead of showing it on screen.\n","\n","Notes\n","-----\n","**Saving figures to file and showing a window at the same time**\n","\n","If you want an image file as well as a user interface window, use\n","`.pyplot.savefig` before `.pyplot.show`. At the end of (a blocking)\n","``show()`` the figure is closed and thus unregistered from pyplot. Calling\n","`.pyplot.savefig` afterwards would save a new and thus empty figure. This\n","limitation of command order does not apply if the show is non-blocking or\n","if you keep a reference to the figure and use `.Figure.savefig`.\n","\n","**Auto-show in jupyter notebooks**\n","\n","The jupyter backends (activated via ``%matplotlib inline``,\n","``%matplotlib notebook``, or ``%matplotlib widget``), call ``show()`` at\n","the end of every cell by default. Thus, you usually don&#x27;t have to call it\n","explicitly there.</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 401);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"]},"metadata":{},"execution_count":7},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","\n","t0 = 0         #waktu awal\n","tn = 450       #dalam waktu 450 hari\n","ndata = 2500   #jumlah data\n","\n","t = np.linspace(t0,tn,ndata)\n","h = t[2]-t[1]"],"metadata":{"executionInfo":{"status":"ok","timestamp":1729418703652,"user_tz":-420,"elapsed":456,"user":{"displayName":"Fabian Rahadian","userId":"14797348072339261340"}},"id":"jwLNfWYCXsuH"},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["N = 2500         #jumlah populasi\n","I0 = 25          #jumlah awal individu terinfeksi\n","R0 = 3           #jumlah awal individu yang telah sembuh\n","S0 = N-I0-R0     #jumlah awal individu rentan\n","\n","I = np.zeros(ndata)\n","S = np.zeros(ndata)\n","R = np.zeros(ndata)\n","\n","I[0] = I0\n","S[0] = S0\n","R[0] = R0"],"metadata":{"executionInfo":{"status":"ok","timestamp":1729418705673,"user_tz":-420,"elapsed":389,"user":{"displayName":"Fabian Rahadian","userId":"14797348072339261340"}},"id":"LaMBWpYfYAmP"},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["beta = 0.7     #laju penularan\n","gamma = 0.15    #laju pemulihan"],"metadata":{"executionInfo":{"status":"ok","timestamp":1729418710891,"user_tz":-420,"elapsed":379,"user":{"displayName":"Fabian Rahadian","userId":"14797348072339261340"}},"id":"D_w7-J-_YVjY"},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["for n in range(0,ndata-1):\n","    S[n+1] = S[n] - h*beta/N*S[n]*I[n]\n","    I[n+1] = I[n] + h*beta/N*S[n]*I[n] - h*gamma*I[n]\n","    R[n+1] = R[n] + h*gamma*I[n]"],"metadata":{"executionInfo":{"status":"ok","timestamp":1729418713760,"user_tz":-420,"elapsed":382,"user":{"displayName":"Fabian Rahadian","userId":"14797348072339261340"}},"id":"GiEMT5eYYaGF"},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["plt.plot(t,S,'b',label='S')\n","plt.plot(t,I,'r',label='I')\n","plt.plot(t,R,'g',label='R')\n","plt.legend()\n","plt.show"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":600},"executionInfo":{"status":"ok","timestamp":1729418716188,"user_tz":-420,"elapsed":507,"user":{"displayName":"Fabian Rahadian","userId":"14797348072339261340"}},"outputId":"4919d124-3edf-4371-c886-b699981d82f2","id":"htSfnsrtYpTv"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<function matplotlib.pyplot.show(close=None, block=None)>"],"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>matplotlib.pyplot.show</b><br/>def show(*args, **kwargs)</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.10/dist-packages/matplotlib/pyplot.py</a>Display all open figures.\n","\n","Parameters\n","----------\n","block : bool, optional\n","    Whether to wait for all figures to be closed before returning.\n","\n","    If `True` block and run the GUI main loop until all figure windows\n","    are closed.\n","\n","    If `False` ensure that all figure windows are displayed and return\n","    immediately.  In this case, you are responsible for ensuring\n","    that the event loop is running to have responsive figures.\n","\n","    Defaults to True in non-interactive mode and to False in interactive\n","    mode (see `.pyplot.isinteractive`).\n","\n","See Also\n","--------\n","ion : Enable interactive mode, which shows / updates the figure after\n","      every plotting command, so that calling ``show()`` is not necessary.\n","ioff : Disable interactive mode.\n","savefig : Save the figure to an image file instead of showing it on screen.\n","\n","Notes\n","-----\n","**Saving figures to file and showing a window at the same time**\n","\n","If you want an image file as well as a user interface window, use\n","`.pyplot.savefig` before `.pyplot.show`. At the end of (a blocking)\n","``show()`` the figure is closed and thus unregistered from pyplot. Calling\n","`.pyplot.savefig` afterwards would save a new and thus empty figure. This\n","limitation of command order does not apply if the show is non-blocking or\n","if you keep a reference to the figure and use `.Figure.savefig`.\n","\n","**Auto-show in jupyter notebooks**\n","\n","The jupyter backends (activated via ``%matplotlib inline``,\n","``%matplotlib notebook``, or ``%matplotlib widget``), call ``show()`` at\n","the end of every cell by default. Thus, you usually don&#x27;t have to call it\n","explicitly there.</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 401);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"]},"metadata":{},"execution_count":12},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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JyohIcHvnOzcuVN79+71OyeffvqpX7AsKSmRy+XSmDFj+ueHxDCPx6Pm5mbORRRMnTpVn376qcrLy32vSZMmafbs2b73nJMIiPYs4sHkpZdeMpxOp7Fs2TJjx44dxq233mpkZGT4zRqHNWpra41PPvnE+OSTTwxJxqOPPmp88sknxldffWUYhmE8/PDDRkZGhvH6668bW7duNa644gpj9OjRRmNjo28f06dPN8466yxj8+bNxnvvvWecfPLJxjXXXBOtnzSo3X777UZ6erqxfv164+DBg75XQ0ODr81tt91mjBo1yli3bp2xZcsWo6CgwCgoKPCtb2trM8aOHWtMmzbNKC8vN9asWWMMHz7cWLBgQTR+0qB27733Ghs2bDD27NljbN261bj33nsNm81mvP3224ZhcC4Ggq5XIRkG5yQSCDBBeuqpp4xRo0YZDofDOPfcc41NmzZFu0sx6Z133jEkHfO64YYbDMMwL6W+//77jezsbMPpdBpTp041du7c6bePw4cPG9dcc42RmppquFwu46c//alRW1sbhV8z+HV3LiQZzz33nK9NY2Oj8bOf/cwYMmSIkZycbPzoRz8yDh486LefL7/80rjkkkuMpKQkY9iwYcYvfvELo7W1tZ9/zeB30003Gfn5+YbD4TCGDx9uTJ061RdeDINzMRB8O8BwTqxnMwzDiM7YDwAAQGiYAwMAAAYdAgwAABh0CDAAAGDQIcAAAIBBhwADAAAGHQIMAAAYdAgwAABg0CHAAACAQYcAAwAABh0CDAAAGHQIMAAAYNAhwAAAgEHn/wcRg+pMlmxOBAAAAABJRU5ErkJggg==\n"},"metadata":{}}]}]}